;PSGG Editor Backup File
version=1.1
file=hoge_control.xlsx
guid=0f50b941-6b7c-4b87-9682-b212b3fc7612
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n019,n005,,n01e,n006,,n007,n01f,,n008,n009,n00a,n00b,,n00c,n00d,,n00e,n00f,,n010,n011,,n012,n013,n014,n015,,n01a,,n01b,n01c,n01d,n016,n017,n018,,,,,,
stateid_list=,,,,,,,,,,,,,,,,,,,,,s001b,s001c,s001e,s001d,s0020,s001f,s0021,s0022
max_name_id=31
max_state_id=34
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embed
n007=members
n008=vars
n009=init
n00a=init-cmt
n00b=init-ref
n00c=update
n00d=update-cmt
n00e=wait
n00f=wait-cmt
n010=post_wait
n011=post_wait-cmt
n012=branch
n013=branch-cmt
n014=brcond
n015=nowait
n016=!dir
n017=!pos
n018=!uuid
n019=state-typ
n01a=gosubstate
n01b=loop_init
n01c=loop_cond
n01d=loop_next
n01e=basestate
n01f=members_init


[id_state_dic]
s001b=S_START
s001c=S_END
s001d=S_PRINT_HELLO
s001e=S_GET_RAND
s001f=S_PRINT_1
s0020=S_PRINT_2
s0021=S_PRINT_3
s0022=S_PRINT_4


[s001b]
n002=S_START
n019=start
n005=S_PRINT_HELLO
n016=@@@
/
(100,100)
The root
@@@

n017=100,100
n018=1

[s001c]
n002=S_END
n019=end
n016=@@@
/
(100,100)
The root
@@@

n017=836,388
n018=2

[s001d]
n002=S_PRINT_HELLO
n003=定番のHello Worldを表示
n005=S_GET_RAND
n00c=println!("Hello, World!");
n016=@@@
/
(100,100)
The root
@@@

n017=274,157
n018=3

[s001e]
n002=S_GET_RAND
n007=m_val : i32,
n01f=m_val : 0,
n00c=self.m_val = rand(1,10);
n012=@@@
brifc(S_PRINT_1);
brelseifc(S_PRINT_2);
brelseifc(S_PRINT_3);
brelse(S_PRINT_4);
@@@

n013=@@@
?
?
?
?
@@@

n014=@@@
self.m_val == 1
self.m_val == 2
self.m_val == 3
?
@@@

n016=@@@
/
(100,100)
The root
@@@

n017=280,362
n018=4

[s001f]
n002=S_PRINT_1
n005=S_END
n009=println!("You are {}st", self.m_val);
n016=@@@
/
(100,100)
The root
@@@

n017=550,288
n018=5

[s0020]
n002=S_PRINT_2
n005=S_END
n009=println!("You are {}nd", self.m_val);
n016=@@@
/
(100,100)
The root
@@@

n017=550,378
n018=6

[s0021]
n002=S_PRINT_3
n005=S_END
n009=println!("You are {}rd", self.m_val);
n016=@@@
/
(100,100)
The root
@@@

n017=550,466
n018=7

[s0022]
n002=S_PRINT_4
n005=S_END
n009=println!("You are {}th", self.m_val);
n016=@@@
/
(100,100)
The root
@@@

n017=550,548
n018=8



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2020/06/17 21:38:43
; * pssgEditor version : 0.64.84945.fd0f469c305e75e3664469f7420c60802a30ea2f
psggfile=@@@
hoge_control.psgg
@@@
xlsfile=@@@
hoge_control.xlsx
@@@
guid=@@@
0f50b941-6b7c-4b87-9682-b212b3fc7612
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
mov,align V
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":""}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":100,"y":100}},{"Key":"S_END","Value":{"x":836,"y":388}},{"Key":"S_PRINT_HELLO","Value":{"x":274,"y":157}},{"Key":"S_0000","Value":{"x":280,"y":362}},{"Key":"S_GET_RAND","Value":{"x":280,"y":362}},{"Key":"S_GET_RAND1","Value":{"x":550,"y":288}},{"Key":"S_PRINT_1","Value":{"x":550,"y":288}},{"Key":"S_PRINT_2","Value":{"x":550,"y":378}},{"Key":"S_PRINT_3","Value":{"x":550,"y":466}},{"Key":"S_PRINT_4","Value":{"x":550,"y":548}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_set_default_comment=1
option_editbranch_automode=1
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=20
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@

@@@
decoimage_typ_name=@@@
sym
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>
<<<?state/^E_/
    <<<?embed
    >>>
eof>>>



/*
    [[state]]
    [[state-cmt]]
    <<<?members
    members      : [[members]]
    members init : [[members_init]]
    >>>
*/
<<<?state-typ/^start$/
#[allow(non_snake_case)]
fn [[state]](&mut self) {
    self.goto(State::[[nextstate]]);
    self.no_wait();
}
eof>>>

<<<?state-typ/^end$/
#[allow(non_snake_case)]
fn [[state]](&mut self) {
}
eof>>>

<<<?state-typ/^gosub$/
#[allow(non_snake_case)]
fn [[state]](&mut self) {
    self.gosub_state(State::[[gosubstate]], State::[[nextstate]]);
    self.no_wait();
}
eof>>>

<<<?state-typ/^subreturn$/
#[allow(non_snake_case)]
fn [[state]](&mut self) {
    self.return_state();
    self.no_wait();
}
eof>>>

<<<?state-typ/^loop$/
#[allow(non_snake_case)]
fn [[state]](&mut self) {
    [[loop_init]]
    self.goto(State::[[state]]_LoopCheckAndGosub____);
    self.no_wait();
}
#[allow(non_snake_case)]
fn [[state]]_LoopCheckAndGosub____(&mut self) {
    if [[loop_cond]] { self.gosub_state(State::[[gosubstate]],State::[[state]]_LoopNext____); }
    else             { self.goto(State::[[nextstate]]); }
    self.no_wait();
}
#[allow(non_snake_case)]
fn [[state]]_LoopNext____(&mut self) {
    [[loop_next]]
    self.goto(State::[[state]]_LoopCheckAndGosub____);
    self.no_wait();
}
eof>>>

#[allow(non_snake_case)]
fn [[state]](&mut self) {
    [[vars]]

    <<<?init
    if self.m_first {
        [[init]]
    }
    >>>

    [[update]]

    <<<?wait
    if [[wait]] {
        return;
    }
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if !self.has_next() {
        self.goto(State::[[nextstate]]);
    }
    >>>

    <<<?nowait
    if self.has_next() {
        self.no_wait();
    }
    >>>
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=hoge_control.psgg
xls=hoge_control.xlsx
sub_src=
gen_src=hoge_control.rs

manager_src=
manager_dir=

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=starterkit2\rust\helpweb.html



[setupinfo]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git b8deda1cf808e4b9b62e5697e1958776f605d049
@@@




lang=rust
framework=

statemachine=hoge_control

prefix=__PREFIX__
xlsdir=C:\Temp\rust\hoge\src
gendir=C:\Temp\rust\hoge\src
genrdir=.
incrdir=.

code_output_start=[STATEGO OUTPUT START]
code_output_end=[STATEGO OUTPUT END]

clone_exchange=with_upper_camel_word

; This section has macro defines for converting.


; commentline format  {%0} will be replaced to a comment.


[macro]

commentline=// {%0}

@branch=@@@
<<<?"{%0}"/^brifc{0,1}$/
if [[brcond:{%N}]] { self.goto( State::{%1} ); }
>>>
<<<?"{%0}"/^brelseifc{0,1}$/
else if [[brcond:{%N}]] { self.goto( State::{%1} ); }
>>>
<<<?"{%0}"/^brelse$/
else { self.goto( State::{%1} ); }
>>>
<<<?"{%0}"/^br_/
{%0}( State::{%1} );
>>>
@@@



#enums=@@@
#[allow(non_camel_case_types)]
    [[state]],
<<<?state-typ/^loop$/
#[allow(non_camel_case_types)]
    [[state]]_LoopCheckAndGosub____,
#[allow(non_camel_case_types)]
    [[state]]_LoopNext____,
>>>
@@@


#def_members=[[members]]

#ini_members=[[members_init]]

#matches=@@@
State::[[state]] => self.[[state]](),
<<<?state-typ/^loop$/
State::[[state]]_LoopCheckAndGosub____ => self.[[state]]_LoopCheckAndGosub____(),
State::[[state]]_LoopNext____          => self.[[state]]_LoopNext____(),
>>>
@@@


#ins_embed=@@@
/*
    [[state]]
    [[state-cmt]]
*/
[[embed]]
@@@



[jpn]

title=Rust スタートキット 2020/5/31

detail=@@@
Rust 用のステートマシンを作成します。

※サンプルプロジェクトを次のＵＲＬより入手可能。
https://github.com/NNNIC/psgg-rust-sample


#  以下のファイルを作成します。

      hoge_control.pssg   --- StateGoデータファイル
      hoge_control.rs      --- 実行ソース。変換コードが挿入される。
@@@




[en]

title=Rust STARTER KIT 2020/5/31

detail=@@@
This is for creating a state machine using Rust language.

* You may get the sample project from the below url.
https://github.com/NNNIC/psgg-rust-sample

# Files

      hoge_control.pssg  --- StateGo Data File
      hoge_control.rs      -- StateGo will convert data to this file.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
[nextstate]

jpn=次に実行するステートを指定する。
en=Specify the next state to be executed.
[branch]

jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[update]

jpn=更新処理を指定する。
en=Specify a update process.
[wait]

jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@

en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[gosubstate]

en=Call Subroutine
jpn=サブルーチン呼出し
[loop_next]

en=Loop increment.
jpn=ループ用インクリメント
[state]

jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@

en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[members]

jpn=メンバ変数及び関数等を指定する。
en=@@@
Specify members, variables, classes,  etc.
@@@

[post_wait]

jpn='wait'後の処理を指定する。
en=Specify the post process after 'wait'.
[members_init]

en=Set initialization code.
jpn=初期化コードを入力
[vars]

jpn=変数宣言を指定する。
en=Specify variable definitions.
[nowait]

jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@

en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[embed]

jpn=@@@
コード埋め込み用。
ステート名がI_時に利用可能。
ステート機能は利用できない。
@@@

en=@@@
For embedding code.
Enable this section if state name starts with "I_".
Disabled state features.
@@@

[basestate]

en=Set base state
jpn=ベースステートのセット
[!uuid]

jpn=システムがステートのuuid指定に使用。
en=@@@
System uses this for the uuid of the state.
@@@

[state-typ]

en=ステートタイプを指定
[init]

jpn=初期化用処理を指定する。
en=Specify a initial process.
[!dir]

jpn=システムがステートのディレクトリ指定に使用。
en=@@@
System uses this for the directory path of the state.
@@@

[loop_init]

en=Loop Initialization
jpn=ループ初期化
[thumbnail]

jpn=説明用のイメージを指定する。
en=@@@
Specify a image for explanation of this state.
@@@

[loop_cond]

en=Loop if the condition is true
jpn=@@@
ループ条件
true時にループする。
@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
state-ref=
wait=
wait-cmt=
embed=
gosubstate=
loop_cond=
branch=
!dir=
post_wait-cmt=
nowait=@@@
*select
nowait
@@@

members=
thumbnail=
update-cmt=
post_wait=
state-cmt=
state-typ=
!pos=
!uuid=
nextstate=
state=
S_=
brcond=
update=
init-cmt=
basestate=
loop_next=
vars=
C_=
members_init=
E_=
init-ref=
loop_init=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,(S0)
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
basestate=read_only,exclusion,(S0)
state-typ=read_only,exclusion,(S0)
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


